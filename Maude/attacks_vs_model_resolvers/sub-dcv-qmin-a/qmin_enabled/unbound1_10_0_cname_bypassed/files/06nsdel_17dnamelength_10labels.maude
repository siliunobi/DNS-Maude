load ../../../../../src/probabilistic-model/dns
load ../../../../../src/probabilistic-model/sampler
load ../../../../../src/probabilistic-model/properties
        
--- Created automatically with Python.
--- This file simulates the Subqueries + Dname chain validation + QMIN attack. It consists
--- of an attacker client query to a resolver which will trigger multiple NS
--- delegations at a victim nameserver. The attacker managed to install some records in
--- this victim nameserver, which trigger a long DNAME chain between the nameserver and
--- the resolver. This is using the DNAME chain validation. Each DNAME answer contains
--- a long response (with many labels) which increases the number of queries by the resolver.
--- Attacker: client ; Victim : nameserver
        
mod TEST is
  inc SAMPLER + APMAUDE + DNS + PROPERTIES .

  eq rsvTimeout? = false .
  eq rsvTimeout = 1000.0 .

 	eq configWorkBudget = 5000 .

	--- enable CNAME validation 
	eq rsvMinCacheCredClient = 5 . 
	eq rsvMinCacheCredResolver = 5 .


         
--- Activate QMIN
eq maxMinimiseCount = 10 .


  op testTTL : -> Float .
  eq testTTL = 3600.0 .

  op q : -> Query .
  eq q = query(1, 'del . 'intermediary . 'com . root, a) .


  ops mAddr cAddr rAddr : -> Address .

  --- "SBELT": fallback if there are no known name servers
  op sb : -> ZoneState .
  eq sb = < root ('a . 'root-servers . 'net . root |-> addrRoot) > .

  ops addrRoot addrNScom addrNStargetANS addrNSintermediary : -> Address .

  op cache : -> Cache .
  eq cache =
    cacheEntry(< 'target-ans . 'com . root, ns, testTTL, 'ns . 'target-ans . 'com . root >, 1)
    cacheEntry(< 'ns . 'target-ans . 'com . root, a, testTTL, addrNStargetANS >, 1)
    cacheEntry(< 'intermediary . 'com . root, ns, testTTL, 'ns . 'intermediary . 'com . root >, 1)
    cacheEntry(< 'ns . 'intermediary . 'com . root, a, testTTL, addrNSintermediary >, 1) .


  ops zoneRoot zoneCom zoneTargetANS zoneIntermediary : -> List{Record} .

  eq zoneRoot =
    --- authoritative data
    < root, soa, testTTL, soaData(testTTL) > --- dummy value
    < root, ns, testTTL, 'a . 'root-servers . 'net . root >

    --- non-authoritative data
    < 'a . 'root-servers . 'net . root, a, testTTL, addrRoot >
    < 'com . root, ns, testTTL, 'ns . 'com . root >
    < 'ns . 'com . root, a, testTTL, addrNScom > . --- glue

  eq zoneCom =
    --- authoritative data
    < 'com . root, soa, testTTL, soaData(testTTL) >
    < 'com . root, ns, testTTL, 'ns . 'com . 'root >
    < 'ns . 'com . root, a, testTTL, addrNScom >

    --- non-authoritative data
    < 'target-ans . 'com . root, ns, testTTL, 'ns . 'target-ans . 'com . root >
    < 'ns . 'target-ans . 'com . root, a, testTTL, addrNStargetANS >  --- glue
    < 'intermediary . 'com . root, ns, testTTL, 'ns . 'intermediary . 'com . root >
    < 'ns . 'intermediary . 'com . root, a, testTTL, addrNSintermediary > . --- glue

  eq zoneTargetANS =
    --- authoritative data
    < 'target-ans . 'com . root, soa, testTTL, soaData(testTTL) >
    < 'target-ans . 'com . root, ns, testTTL, 'ns . 'target-ans . 'com . root >
    < 'ns . 'target-ans . 'com . root, a, testTTL, addrNStargetANS >

    

		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p1 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p1 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q1 . 'target-ans . 'com . root >


		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p2 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p2 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q2 . 'target-ans . 'com . root >


		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p3 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p3 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q3 . 'target-ans . 'com . root >


		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p4 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p4 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q4 . 'target-ans . 'com . root >


		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p5 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p5 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q5 . 'target-ans . 'com . root >


		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'b6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'c6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'd6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'e6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'f6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'g6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'h6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'i6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'j6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'k6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'l6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'm6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'n6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'o6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p6 . 'target-ans . 'com . root >
		< 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'p6 . 'target-ans . 'com . root , dname, testTTL, 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 . 'q6 . 'target-ans . 'com . root >

    .

  eq zoneIntermediary =
    --- authoritative data
    < 'intermediary . 'com . root, soa, testTTL, soaData(testTTL) >
    < 'intermediary . 'com . root, ns, testTTL, 'ns . 'intermediary . 'com . root >
    < 'ns . 'intermediary . 'com . root, a, testTTL, addrNSintermediary >

    	--- Malicious delegation
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a1 . 'target-ans . 'com . root >
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a2 . 'target-ans . 'com . root >
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a3 . 'target-ans . 'com . root >
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a4 . 'target-ans . 'com . root >
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a5 . 'target-ans . 'com . root >
		< 'del . 'intermediary . 'com . root, ns, testTTL, 'sub . 'fake8 . 'fake7 . 'fake6 . 'fake5 . 'fake4 . 'fake3 . 'fake2 . 'fake1 . 'fake0 .  'a6 . 'target-ans . 'com . root >

    .


  op initConfig : -> Config .
  eq initConfig = run(initState, limit) .

  eq initState = { 0.0 | nil }
    --- Preliminaries
    initMonitor(mAddr)
    [id, to cAddr : start, 0]

    < cAddr : Client | queries: q, resolver: rAddr, notifyDone: nullAddr >
    < rAddr : Resolver | cache: cache,
                         nxdomainCache: nilNxdomainCache,
                         nodataCache: nilNodataCache,
                         sbelt: sb,
                         workBudget: emptyIN,
                         blockedQueries: eptQSS,
                         sentQueries: eptQSS >

    --- Root name server
    < addrRoot : Nameserver | db: zoneRoot, queue: nilQueue >
    --- .com authoritative name server
    < addrNScom : Nameserver | db: zoneCom, queue: nilQueue >
    --- attacker authoritative name server
    < addrNStargetANS : Nameserver | db: zoneTargetANS, queue: nilQueue >
    --- intermediary.com authoritative name server
    < addrNSintermediary : Nameserver | db: zoneIntermediary, queue: nilQueue > .

endm

--- uncomment for debugging purposes
--- set trace on .

set trace condition off . --- This does not seem to work
set trace whole off .
set trace substitution off .
set trace mb off .
set trace eq off .
set trace rl on . --- on
set trace select off .
set trace rewrite off .
set trace body off .
set trace builtin off .

rew initConfig .
rew numActorMsgsRecvd(addrNStargetANS, initConfig) .
---rew msgAmpFactor(cAddr, addrNStargetANS, initConfig) .
--- rew msgAmpFactor(cAddr ; addrNSattacker, rAddr, initConfig) .
--- rew numActorMsgsRecvdTerminal(rAddr, initConfig) .
--- rew numActorMsgsSentTerminal(cAddr ; addrNSattacker, initConfig) .
---rew msgAmpFactorTerminal(cAddr, rAddr, initConfig) .

--- rew msgAmpFactor(cAddr, rAddr, initConfig) .
--- rew msgAmpFactor(cAddr, addrNStargetANS, initConfig) .
        