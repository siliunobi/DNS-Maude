load dns
load sampler
load properties
load ../../attacker-models/probabilistic-model/attacker

--- Here, we analyze the average duration of client queries for different TTLs.

mod TEST is
  inc SAMPLER + APMAUDE + DNS + PROPERTIES + ATTACKER .

  --- turn on name server resource bounds and resolver timeouts
  --- eq nsResourceBounds? = true .
  eq rsvTimeout? = true .

  op testTTL : -> Float .
  eq testTTL = 3600.0 . --- Note that this is in time units, not seconds

  ops mAddr cAddr rAddr : -> Address .

  --- "SBELT": fallback if there are no known name servers
  op sb : -> ZoneState .
  eq sb = < root ('a . 'root-servers . 'net . root |-> addrRoot) > .

  ops addrRoot addrNScom addrNSexample : -> Address .

  ops zoneRoot zoneCom zoneExample : -> List{Record} .
  eq zoneRoot =
    --- authoritative data
    < root, soa, testTTL, soaData(testTTL) > --- dummy value
    < root, ns, testTTL, 'a . 'root-servers . 'net . root >

    --- non-authoritative data
    < 'a . 'root-servers . 'net . root, a, testTTL, addrRoot >
    < 'com . root, ns, testTTL, 'ns . 'com . root >
    < 'ns . 'com . root, a, testTTL, addrNScom > . --- glue

  eq zoneCom =
    --- authoritative data
    < 'com . root, soa, testTTL, soaData(testTTL) >
    < 'com . root, ns, testTTL, 'ns . 'com . 'root >
    < 'ns . 'com . root, a, testTTL, addrNScom >

    --- non-authoritative data
    < 'example . 'com . root, ns, testTTL, 'ns . 'example . 'com . root >
    < 'ns . 'example . 'com . root, a, testTTL, addrNSexample > . --- glue

  eq zoneExample =
    --- authoritative data
    < 'example . 'com . root, soa, testTTL, soaData(testTTL) >
    < 'example . 'com . root, ns, testTTL, 'ns . 'example . 'com . root >
    < 'ns . 'example . 'com . root, a, testTTL, addrNSexample > .

  eq initState = { 0.0 | nil }
    --- Preliminaries
    initMonitor(mAddr)
    [id, to cAddr : start, 0] --- start legitimate client (give attacker head start)

    --- Root name server
    < addrRoot : Nameserver | db: zoneRoot, queue: nilQueue >
    --- .com authoritative name server
    < addrNScom : Nameserver | db: zoneCom, queue: nilQueue >
    --- victim.com authoritative name server
    < addrNSexample : Nameserver | db: zoneExample, queue: nilQueue >

    --- Client
    < cAddr : Client | queries: genQueries(20, 'example . 'com . root, 1, a, cAddr), resolver: rAddr, notifyDone: nullAddr >

    --- Resolver
    < rAddr : Resolver | cache: nilCache,
                         nxdomainCache: nilNxdomainCache,
                         nodataCache: nilNodataCache,
                         sbelt: sb,
                         workBudget: emptyIN,
                         blockedQueries: eptQSS,
                         sentQueries: eptQSS >
    .

  ***** to be used by PVeStA
  var C : Config .
  eq val(0, C) = avgQueryDuration(C) .

endm

set clear rules off .
